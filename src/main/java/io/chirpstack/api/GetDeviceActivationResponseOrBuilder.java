// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: api/device.proto
// Protobuf Java Version: 4.29.2

package io.chirpstack.api;

public interface GetDeviceActivationResponseOrBuilder extends
    // @@protoc_insertion_point(interface_extends:api.GetDeviceActivationResponse)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Device activation object.
   * </pre>
   *
   * <code>.api.DeviceActivation device_activation = 1;</code>
   * @return Whether the deviceActivation field is set.
   */
  boolean hasDeviceActivation();
  /**
   * <pre>
   * Device activation object.
   * </pre>
   *
   * <code>.api.DeviceActivation device_activation = 1;</code>
   * @return The deviceActivation.
   */
  io.chirpstack.api.DeviceActivation getDeviceActivation();
  /**
   * <pre>
   * Device activation object.
   * </pre>
   *
   * <code>.api.DeviceActivation device_activation = 1;</code>
   */
  io.chirpstack.api.DeviceActivationOrBuilder getDeviceActivationOrBuilder();

  /**
   * <pre>
   * Join-Server context.
   * A non-empty value indicatest that ChirpStack does not have access to
   * the AppSKey and that the encryption / decryption of the payloads is
   * the responsibility of the end-application.
   * </pre>
   *
   * <code>.common.JoinServerContext join_server_context = 2;</code>
   * @return Whether the joinServerContext field is set.
   */
  boolean hasJoinServerContext();
  /**
   * <pre>
   * Join-Server context.
   * A non-empty value indicatest that ChirpStack does not have access to
   * the AppSKey and that the encryption / decryption of the payloads is
   * the responsibility of the end-application.
   * </pre>
   *
   * <code>.common.JoinServerContext join_server_context = 2;</code>
   * @return The joinServerContext.
   */
  io.chirpstack.api.JoinServerContext getJoinServerContext();
  /**
   * <pre>
   * Join-Server context.
   * A non-empty value indicatest that ChirpStack does not have access to
   * the AppSKey and that the encryption / decryption of the payloads is
   * the responsibility of the end-application.
   * </pre>
   *
   * <code>.common.JoinServerContext join_server_context = 2;</code>
   */
  io.chirpstack.api.JoinServerContextOrBuilder getJoinServerContextOrBuilder();
}
