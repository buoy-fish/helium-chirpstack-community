// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: api/internal.proto
// Protobuf Java Version: 4.29.2

package io.chirpstack.api;

/**
 * Protobuf type {@code api.SettingsResponse}
 */
public final class SettingsResponse extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:api.SettingsResponse)
    SettingsResponseOrBuilder {
private static final long serialVersionUID = 0L;
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 29,
      /* patch= */ 2,
      /* suffix= */ "",
      SettingsResponse.class.getName());
  }
  // Use SettingsResponse.newBuilder() to construct.
  private SettingsResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private SettingsResponse() {
    tileserverUrl_ = "";
    mapAttribution_ = "";
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.chirpstack.api.InternalProto.internal_static_api_SettingsResponse_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.chirpstack.api.InternalProto.internal_static_api_SettingsResponse_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.chirpstack.api.SettingsResponse.class, io.chirpstack.api.SettingsResponse.Builder.class);
  }

  private int bitField0_;
  public static final int OPENID_CONNECT_FIELD_NUMBER = 1;
  private io.chirpstack.api.OpenIdConnect openidConnect_;
  /**
   * <pre>
   * OpenId Connect settings.
   * </pre>
   *
   * <code>.api.OpenIdConnect openid_connect = 1;</code>
   * @return Whether the openidConnect field is set.
   */
  @java.lang.Override
  public boolean hasOpenidConnect() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * OpenId Connect settings.
   * </pre>
   *
   * <code>.api.OpenIdConnect openid_connect = 1;</code>
   * @return The openidConnect.
   */
  @java.lang.Override
  public io.chirpstack.api.OpenIdConnect getOpenidConnect() {
    return openidConnect_ == null ? io.chirpstack.api.OpenIdConnect.getDefaultInstance() : openidConnect_;
  }
  /**
   * <pre>
   * OpenId Connect settings.
   * </pre>
   *
   * <code>.api.OpenIdConnect openid_connect = 1;</code>
   */
  @java.lang.Override
  public io.chirpstack.api.OpenIdConnectOrBuilder getOpenidConnectOrBuilder() {
    return openidConnect_ == null ? io.chirpstack.api.OpenIdConnect.getDefaultInstance() : openidConnect_;
  }

  public static final int OAUTH2_FIELD_NUMBER = 2;
  private io.chirpstack.api.OAuth2 oauth2_;
  /**
   * <pre>
   * OAuth2 settings.
   * </pre>
   *
   * <code>.api.OAuth2 oauth2 = 2;</code>
   * @return Whether the oauth2 field is set.
   */
  @java.lang.Override
  public boolean hasOauth2() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * OAuth2 settings.
   * </pre>
   *
   * <code>.api.OAuth2 oauth2 = 2;</code>
   * @return The oauth2.
   */
  @java.lang.Override
  public io.chirpstack.api.OAuth2 getOauth2() {
    return oauth2_ == null ? io.chirpstack.api.OAuth2.getDefaultInstance() : oauth2_;
  }
  /**
   * <pre>
   * OAuth2 settings.
   * </pre>
   *
   * <code>.api.OAuth2 oauth2 = 2;</code>
   */
  @java.lang.Override
  public io.chirpstack.api.OAuth2OrBuilder getOauth2OrBuilder() {
    return oauth2_ == null ? io.chirpstack.api.OAuth2.getDefaultInstance() : oauth2_;
  }

  public static final int TILESERVER_URL_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private volatile java.lang.Object tileserverUrl_ = "";
  /**
   * <pre>
   * Tileserver URL.
   * </pre>
   *
   * <code>string tileserver_url = 3;</code>
   * @return The tileserverUrl.
   */
  @java.lang.Override
  public java.lang.String getTileserverUrl() {
    java.lang.Object ref = tileserverUrl_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      tileserverUrl_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Tileserver URL.
   * </pre>
   *
   * <code>string tileserver_url = 3;</code>
   * @return The bytes for tileserverUrl.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getTileserverUrlBytes() {
    java.lang.Object ref = tileserverUrl_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      tileserverUrl_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int MAP_ATTRIBUTION_FIELD_NUMBER = 4;
  @SuppressWarnings("serial")
  private volatile java.lang.Object mapAttribution_ = "";
  /**
   * <pre>
   * Map attribution.
   * </pre>
   *
   * <code>string map_attribution = 4;</code>
   * @return The mapAttribution.
   */
  @java.lang.Override
  public java.lang.String getMapAttribution() {
    java.lang.Object ref = mapAttribution_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      mapAttribution_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Map attribution.
   * </pre>
   *
   * <code>string map_attribution = 4;</code>
   * @return The bytes for mapAttribution.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getMapAttributionBytes() {
    java.lang.Object ref = mapAttribution_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      mapAttribution_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeMessage(1, getOpenidConnect());
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeMessage(2, getOauth2());
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(tileserverUrl_)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 3, tileserverUrl_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(mapAttribution_)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 4, mapAttribution_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getOpenidConnect());
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getOauth2());
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(tileserverUrl_)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(3, tileserverUrl_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(mapAttribution_)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(4, mapAttribution_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.chirpstack.api.SettingsResponse)) {
      return super.equals(obj);
    }
    io.chirpstack.api.SettingsResponse other = (io.chirpstack.api.SettingsResponse) obj;

    if (hasOpenidConnect() != other.hasOpenidConnect()) return false;
    if (hasOpenidConnect()) {
      if (!getOpenidConnect()
          .equals(other.getOpenidConnect())) return false;
    }
    if (hasOauth2() != other.hasOauth2()) return false;
    if (hasOauth2()) {
      if (!getOauth2()
          .equals(other.getOauth2())) return false;
    }
    if (!getTileserverUrl()
        .equals(other.getTileserverUrl())) return false;
    if (!getMapAttribution()
        .equals(other.getMapAttribution())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasOpenidConnect()) {
      hash = (37 * hash) + OPENID_CONNECT_FIELD_NUMBER;
      hash = (53 * hash) + getOpenidConnect().hashCode();
    }
    if (hasOauth2()) {
      hash = (37 * hash) + OAUTH2_FIELD_NUMBER;
      hash = (53 * hash) + getOauth2().hashCode();
    }
    hash = (37 * hash) + TILESERVER_URL_FIELD_NUMBER;
    hash = (53 * hash) + getTileserverUrl().hashCode();
    hash = (37 * hash) + MAP_ATTRIBUTION_FIELD_NUMBER;
    hash = (53 * hash) + getMapAttribution().hashCode();
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.chirpstack.api.SettingsResponse parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.chirpstack.api.SettingsResponse parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.chirpstack.api.SettingsResponse parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.chirpstack.api.SettingsResponse parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.chirpstack.api.SettingsResponse parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.chirpstack.api.SettingsResponse parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.chirpstack.api.SettingsResponse parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static io.chirpstack.api.SettingsResponse parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static io.chirpstack.api.SettingsResponse parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static io.chirpstack.api.SettingsResponse parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.chirpstack.api.SettingsResponse parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static io.chirpstack.api.SettingsResponse parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.chirpstack.api.SettingsResponse prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code api.SettingsResponse}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:api.SettingsResponse)
      io.chirpstack.api.SettingsResponseOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.chirpstack.api.InternalProto.internal_static_api_SettingsResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.chirpstack.api.InternalProto.internal_static_api_SettingsResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.chirpstack.api.SettingsResponse.class, io.chirpstack.api.SettingsResponse.Builder.class);
    }

    // Construct using io.chirpstack.api.SettingsResponse.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessage
              .alwaysUseFieldBuilders) {
        getOpenidConnectFieldBuilder();
        getOauth2FieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      openidConnect_ = null;
      if (openidConnectBuilder_ != null) {
        openidConnectBuilder_.dispose();
        openidConnectBuilder_ = null;
      }
      oauth2_ = null;
      if (oauth2Builder_ != null) {
        oauth2Builder_.dispose();
        oauth2Builder_ = null;
      }
      tileserverUrl_ = "";
      mapAttribution_ = "";
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.chirpstack.api.InternalProto.internal_static_api_SettingsResponse_descriptor;
    }

    @java.lang.Override
    public io.chirpstack.api.SettingsResponse getDefaultInstanceForType() {
      return io.chirpstack.api.SettingsResponse.getDefaultInstance();
    }

    @java.lang.Override
    public io.chirpstack.api.SettingsResponse build() {
      io.chirpstack.api.SettingsResponse result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.chirpstack.api.SettingsResponse buildPartial() {
      io.chirpstack.api.SettingsResponse result = new io.chirpstack.api.SettingsResponse(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(io.chirpstack.api.SettingsResponse result) {
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.openidConnect_ = openidConnectBuilder_ == null
            ? openidConnect_
            : openidConnectBuilder_.build();
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.oauth2_ = oauth2Builder_ == null
            ? oauth2_
            : oauth2Builder_.build();
        to_bitField0_ |= 0x00000002;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.tileserverUrl_ = tileserverUrl_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.mapAttribution_ = mapAttribution_;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.chirpstack.api.SettingsResponse) {
        return mergeFrom((io.chirpstack.api.SettingsResponse)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.chirpstack.api.SettingsResponse other) {
      if (other == io.chirpstack.api.SettingsResponse.getDefaultInstance()) return this;
      if (other.hasOpenidConnect()) {
        mergeOpenidConnect(other.getOpenidConnect());
      }
      if (other.hasOauth2()) {
        mergeOauth2(other.getOauth2());
      }
      if (!other.getTileserverUrl().isEmpty()) {
        tileserverUrl_ = other.tileserverUrl_;
        bitField0_ |= 0x00000004;
        onChanged();
      }
      if (!other.getMapAttribution().isEmpty()) {
        mapAttribution_ = other.mapAttribution_;
        bitField0_ |= 0x00000008;
        onChanged();
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getOpenidConnectFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              input.readMessage(
                  getOauth2FieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 26: {
              tileserverUrl_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            case 34: {
              mapAttribution_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000008;
              break;
            } // case 34
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private io.chirpstack.api.OpenIdConnect openidConnect_;
    private com.google.protobuf.SingleFieldBuilder<
        io.chirpstack.api.OpenIdConnect, io.chirpstack.api.OpenIdConnect.Builder, io.chirpstack.api.OpenIdConnectOrBuilder> openidConnectBuilder_;
    /**
     * <pre>
     * OpenId Connect settings.
     * </pre>
     *
     * <code>.api.OpenIdConnect openid_connect = 1;</code>
     * @return Whether the openidConnect field is set.
     */
    public boolean hasOpenidConnect() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * OpenId Connect settings.
     * </pre>
     *
     * <code>.api.OpenIdConnect openid_connect = 1;</code>
     * @return The openidConnect.
     */
    public io.chirpstack.api.OpenIdConnect getOpenidConnect() {
      if (openidConnectBuilder_ == null) {
        return openidConnect_ == null ? io.chirpstack.api.OpenIdConnect.getDefaultInstance() : openidConnect_;
      } else {
        return openidConnectBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * OpenId Connect settings.
     * </pre>
     *
     * <code>.api.OpenIdConnect openid_connect = 1;</code>
     */
    public Builder setOpenidConnect(io.chirpstack.api.OpenIdConnect value) {
      if (openidConnectBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        openidConnect_ = value;
      } else {
        openidConnectBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * OpenId Connect settings.
     * </pre>
     *
     * <code>.api.OpenIdConnect openid_connect = 1;</code>
     */
    public Builder setOpenidConnect(
        io.chirpstack.api.OpenIdConnect.Builder builderForValue) {
      if (openidConnectBuilder_ == null) {
        openidConnect_ = builderForValue.build();
      } else {
        openidConnectBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * OpenId Connect settings.
     * </pre>
     *
     * <code>.api.OpenIdConnect openid_connect = 1;</code>
     */
    public Builder mergeOpenidConnect(io.chirpstack.api.OpenIdConnect value) {
      if (openidConnectBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0) &&
          openidConnect_ != null &&
          openidConnect_ != io.chirpstack.api.OpenIdConnect.getDefaultInstance()) {
          getOpenidConnectBuilder().mergeFrom(value);
        } else {
          openidConnect_ = value;
        }
      } else {
        openidConnectBuilder_.mergeFrom(value);
      }
      if (openidConnect_ != null) {
        bitField0_ |= 0x00000001;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * OpenId Connect settings.
     * </pre>
     *
     * <code>.api.OpenIdConnect openid_connect = 1;</code>
     */
    public Builder clearOpenidConnect() {
      bitField0_ = (bitField0_ & ~0x00000001);
      openidConnect_ = null;
      if (openidConnectBuilder_ != null) {
        openidConnectBuilder_.dispose();
        openidConnectBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * OpenId Connect settings.
     * </pre>
     *
     * <code>.api.OpenIdConnect openid_connect = 1;</code>
     */
    public io.chirpstack.api.OpenIdConnect.Builder getOpenidConnectBuilder() {
      bitField0_ |= 0x00000001;
      onChanged();
      return getOpenidConnectFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * OpenId Connect settings.
     * </pre>
     *
     * <code>.api.OpenIdConnect openid_connect = 1;</code>
     */
    public io.chirpstack.api.OpenIdConnectOrBuilder getOpenidConnectOrBuilder() {
      if (openidConnectBuilder_ != null) {
        return openidConnectBuilder_.getMessageOrBuilder();
      } else {
        return openidConnect_ == null ?
            io.chirpstack.api.OpenIdConnect.getDefaultInstance() : openidConnect_;
      }
    }
    /**
     * <pre>
     * OpenId Connect settings.
     * </pre>
     *
     * <code>.api.OpenIdConnect openid_connect = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        io.chirpstack.api.OpenIdConnect, io.chirpstack.api.OpenIdConnect.Builder, io.chirpstack.api.OpenIdConnectOrBuilder> 
        getOpenidConnectFieldBuilder() {
      if (openidConnectBuilder_ == null) {
        openidConnectBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            io.chirpstack.api.OpenIdConnect, io.chirpstack.api.OpenIdConnect.Builder, io.chirpstack.api.OpenIdConnectOrBuilder>(
                getOpenidConnect(),
                getParentForChildren(),
                isClean());
        openidConnect_ = null;
      }
      return openidConnectBuilder_;
    }

    private io.chirpstack.api.OAuth2 oauth2_;
    private com.google.protobuf.SingleFieldBuilder<
        io.chirpstack.api.OAuth2, io.chirpstack.api.OAuth2.Builder, io.chirpstack.api.OAuth2OrBuilder> oauth2Builder_;
    /**
     * <pre>
     * OAuth2 settings.
     * </pre>
     *
     * <code>.api.OAuth2 oauth2 = 2;</code>
     * @return Whether the oauth2 field is set.
     */
    public boolean hasOauth2() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * OAuth2 settings.
     * </pre>
     *
     * <code>.api.OAuth2 oauth2 = 2;</code>
     * @return The oauth2.
     */
    public io.chirpstack.api.OAuth2 getOauth2() {
      if (oauth2Builder_ == null) {
        return oauth2_ == null ? io.chirpstack.api.OAuth2.getDefaultInstance() : oauth2_;
      } else {
        return oauth2Builder_.getMessage();
      }
    }
    /**
     * <pre>
     * OAuth2 settings.
     * </pre>
     *
     * <code>.api.OAuth2 oauth2 = 2;</code>
     */
    public Builder setOauth2(io.chirpstack.api.OAuth2 value) {
      if (oauth2Builder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        oauth2_ = value;
      } else {
        oauth2Builder_.setMessage(value);
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * OAuth2 settings.
     * </pre>
     *
     * <code>.api.OAuth2 oauth2 = 2;</code>
     */
    public Builder setOauth2(
        io.chirpstack.api.OAuth2.Builder builderForValue) {
      if (oauth2Builder_ == null) {
        oauth2_ = builderForValue.build();
      } else {
        oauth2Builder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * OAuth2 settings.
     * </pre>
     *
     * <code>.api.OAuth2 oauth2 = 2;</code>
     */
    public Builder mergeOauth2(io.chirpstack.api.OAuth2 value) {
      if (oauth2Builder_ == null) {
        if (((bitField0_ & 0x00000002) != 0) &&
          oauth2_ != null &&
          oauth2_ != io.chirpstack.api.OAuth2.getDefaultInstance()) {
          getOauth2Builder().mergeFrom(value);
        } else {
          oauth2_ = value;
        }
      } else {
        oauth2Builder_.mergeFrom(value);
      }
      if (oauth2_ != null) {
        bitField0_ |= 0x00000002;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * OAuth2 settings.
     * </pre>
     *
     * <code>.api.OAuth2 oauth2 = 2;</code>
     */
    public Builder clearOauth2() {
      bitField0_ = (bitField0_ & ~0x00000002);
      oauth2_ = null;
      if (oauth2Builder_ != null) {
        oauth2Builder_.dispose();
        oauth2Builder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * OAuth2 settings.
     * </pre>
     *
     * <code>.api.OAuth2 oauth2 = 2;</code>
     */
    public io.chirpstack.api.OAuth2.Builder getOauth2Builder() {
      bitField0_ |= 0x00000002;
      onChanged();
      return getOauth2FieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * OAuth2 settings.
     * </pre>
     *
     * <code>.api.OAuth2 oauth2 = 2;</code>
     */
    public io.chirpstack.api.OAuth2OrBuilder getOauth2OrBuilder() {
      if (oauth2Builder_ != null) {
        return oauth2Builder_.getMessageOrBuilder();
      } else {
        return oauth2_ == null ?
            io.chirpstack.api.OAuth2.getDefaultInstance() : oauth2_;
      }
    }
    /**
     * <pre>
     * OAuth2 settings.
     * </pre>
     *
     * <code>.api.OAuth2 oauth2 = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        io.chirpstack.api.OAuth2, io.chirpstack.api.OAuth2.Builder, io.chirpstack.api.OAuth2OrBuilder> 
        getOauth2FieldBuilder() {
      if (oauth2Builder_ == null) {
        oauth2Builder_ = new com.google.protobuf.SingleFieldBuilder<
            io.chirpstack.api.OAuth2, io.chirpstack.api.OAuth2.Builder, io.chirpstack.api.OAuth2OrBuilder>(
                getOauth2(),
                getParentForChildren(),
                isClean());
        oauth2_ = null;
      }
      return oauth2Builder_;
    }

    private java.lang.Object tileserverUrl_ = "";
    /**
     * <pre>
     * Tileserver URL.
     * </pre>
     *
     * <code>string tileserver_url = 3;</code>
     * @return The tileserverUrl.
     */
    public java.lang.String getTileserverUrl() {
      java.lang.Object ref = tileserverUrl_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        tileserverUrl_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Tileserver URL.
     * </pre>
     *
     * <code>string tileserver_url = 3;</code>
     * @return The bytes for tileserverUrl.
     */
    public com.google.protobuf.ByteString
        getTileserverUrlBytes() {
      java.lang.Object ref = tileserverUrl_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        tileserverUrl_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Tileserver URL.
     * </pre>
     *
     * <code>string tileserver_url = 3;</code>
     * @param value The tileserverUrl to set.
     * @return This builder for chaining.
     */
    public Builder setTileserverUrl(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      tileserverUrl_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Tileserver URL.
     * </pre>
     *
     * <code>string tileserver_url = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearTileserverUrl() {
      tileserverUrl_ = getDefaultInstance().getTileserverUrl();
      bitField0_ = (bitField0_ & ~0x00000004);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Tileserver URL.
     * </pre>
     *
     * <code>string tileserver_url = 3;</code>
     * @param value The bytes for tileserverUrl to set.
     * @return This builder for chaining.
     */
    public Builder setTileserverUrlBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      tileserverUrl_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }

    private java.lang.Object mapAttribution_ = "";
    /**
     * <pre>
     * Map attribution.
     * </pre>
     *
     * <code>string map_attribution = 4;</code>
     * @return The mapAttribution.
     */
    public java.lang.String getMapAttribution() {
      java.lang.Object ref = mapAttribution_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        mapAttribution_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Map attribution.
     * </pre>
     *
     * <code>string map_attribution = 4;</code>
     * @return The bytes for mapAttribution.
     */
    public com.google.protobuf.ByteString
        getMapAttributionBytes() {
      java.lang.Object ref = mapAttribution_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        mapAttribution_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Map attribution.
     * </pre>
     *
     * <code>string map_attribution = 4;</code>
     * @param value The mapAttribution to set.
     * @return This builder for chaining.
     */
    public Builder setMapAttribution(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      mapAttribution_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Map attribution.
     * </pre>
     *
     * <code>string map_attribution = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearMapAttribution() {
      mapAttribution_ = getDefaultInstance().getMapAttribution();
      bitField0_ = (bitField0_ & ~0x00000008);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Map attribution.
     * </pre>
     *
     * <code>string map_attribution = 4;</code>
     * @param value The bytes for mapAttribution to set.
     * @return This builder for chaining.
     */
    public Builder setMapAttributionBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      mapAttribution_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:api.SettingsResponse)
  }

  // @@protoc_insertion_point(class_scope:api.SettingsResponse)
  private static final io.chirpstack.api.SettingsResponse DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.chirpstack.api.SettingsResponse();
  }

  public static io.chirpstack.api.SettingsResponse getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<SettingsResponse>
      PARSER = new com.google.protobuf.AbstractParser<SettingsResponse>() {
    @java.lang.Override
    public SettingsResponse parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<SettingsResponse> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<SettingsResponse> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.chirpstack.api.SettingsResponse getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

