// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: api/device.proto
// Protobuf Java Version: 4.29.2

package io.chirpstack.api;

/**
 * Protobuf type {@code api.GetDeviceActivationResponse}
 */
public final class GetDeviceActivationResponse extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:api.GetDeviceActivationResponse)
    GetDeviceActivationResponseOrBuilder {
private static final long serialVersionUID = 0L;
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 29,
      /* patch= */ 2,
      /* suffix= */ "",
      GetDeviceActivationResponse.class.getName());
  }
  // Use GetDeviceActivationResponse.newBuilder() to construct.
  private GetDeviceActivationResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private GetDeviceActivationResponse() {
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.chirpstack.api.DeviceProto.internal_static_api_GetDeviceActivationResponse_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.chirpstack.api.DeviceProto.internal_static_api_GetDeviceActivationResponse_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.chirpstack.api.GetDeviceActivationResponse.class, io.chirpstack.api.GetDeviceActivationResponse.Builder.class);
  }

  private int bitField0_;
  public static final int DEVICE_ACTIVATION_FIELD_NUMBER = 1;
  private io.chirpstack.api.DeviceActivation deviceActivation_;
  /**
   * <pre>
   * Device activation object.
   * </pre>
   *
   * <code>.api.DeviceActivation device_activation = 1;</code>
   * @return Whether the deviceActivation field is set.
   */
  @java.lang.Override
  public boolean hasDeviceActivation() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * Device activation object.
   * </pre>
   *
   * <code>.api.DeviceActivation device_activation = 1;</code>
   * @return The deviceActivation.
   */
  @java.lang.Override
  public io.chirpstack.api.DeviceActivation getDeviceActivation() {
    return deviceActivation_ == null ? io.chirpstack.api.DeviceActivation.getDefaultInstance() : deviceActivation_;
  }
  /**
   * <pre>
   * Device activation object.
   * </pre>
   *
   * <code>.api.DeviceActivation device_activation = 1;</code>
   */
  @java.lang.Override
  public io.chirpstack.api.DeviceActivationOrBuilder getDeviceActivationOrBuilder() {
    return deviceActivation_ == null ? io.chirpstack.api.DeviceActivation.getDefaultInstance() : deviceActivation_;
  }

  public static final int JOIN_SERVER_CONTEXT_FIELD_NUMBER = 2;
  private io.chirpstack.api.JoinServerContext joinServerContext_;
  /**
   * <pre>
   * Join-Server context.
   * A non-empty value indicatest that ChirpStack does not have access to
   * the AppSKey and that the encryption / decryption of the payloads is
   * the responsibility of the end-application.
   * </pre>
   *
   * <code>.common.JoinServerContext join_server_context = 2;</code>
   * @return Whether the joinServerContext field is set.
   */
  @java.lang.Override
  public boolean hasJoinServerContext() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * Join-Server context.
   * A non-empty value indicatest that ChirpStack does not have access to
   * the AppSKey and that the encryption / decryption of the payloads is
   * the responsibility of the end-application.
   * </pre>
   *
   * <code>.common.JoinServerContext join_server_context = 2;</code>
   * @return The joinServerContext.
   */
  @java.lang.Override
  public io.chirpstack.api.JoinServerContext getJoinServerContext() {
    return joinServerContext_ == null ? io.chirpstack.api.JoinServerContext.getDefaultInstance() : joinServerContext_;
  }
  /**
   * <pre>
   * Join-Server context.
   * A non-empty value indicatest that ChirpStack does not have access to
   * the AppSKey and that the encryption / decryption of the payloads is
   * the responsibility of the end-application.
   * </pre>
   *
   * <code>.common.JoinServerContext join_server_context = 2;</code>
   */
  @java.lang.Override
  public io.chirpstack.api.JoinServerContextOrBuilder getJoinServerContextOrBuilder() {
    return joinServerContext_ == null ? io.chirpstack.api.JoinServerContext.getDefaultInstance() : joinServerContext_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeMessage(1, getDeviceActivation());
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeMessage(2, getJoinServerContext());
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getDeviceActivation());
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getJoinServerContext());
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.chirpstack.api.GetDeviceActivationResponse)) {
      return super.equals(obj);
    }
    io.chirpstack.api.GetDeviceActivationResponse other = (io.chirpstack.api.GetDeviceActivationResponse) obj;

    if (hasDeviceActivation() != other.hasDeviceActivation()) return false;
    if (hasDeviceActivation()) {
      if (!getDeviceActivation()
          .equals(other.getDeviceActivation())) return false;
    }
    if (hasJoinServerContext() != other.hasJoinServerContext()) return false;
    if (hasJoinServerContext()) {
      if (!getJoinServerContext()
          .equals(other.getJoinServerContext())) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasDeviceActivation()) {
      hash = (37 * hash) + DEVICE_ACTIVATION_FIELD_NUMBER;
      hash = (53 * hash) + getDeviceActivation().hashCode();
    }
    if (hasJoinServerContext()) {
      hash = (37 * hash) + JOIN_SERVER_CONTEXT_FIELD_NUMBER;
      hash = (53 * hash) + getJoinServerContext().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.chirpstack.api.GetDeviceActivationResponse parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.chirpstack.api.GetDeviceActivationResponse parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.chirpstack.api.GetDeviceActivationResponse parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.chirpstack.api.GetDeviceActivationResponse parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.chirpstack.api.GetDeviceActivationResponse parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.chirpstack.api.GetDeviceActivationResponse parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.chirpstack.api.GetDeviceActivationResponse parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static io.chirpstack.api.GetDeviceActivationResponse parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static io.chirpstack.api.GetDeviceActivationResponse parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static io.chirpstack.api.GetDeviceActivationResponse parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.chirpstack.api.GetDeviceActivationResponse parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static io.chirpstack.api.GetDeviceActivationResponse parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.chirpstack.api.GetDeviceActivationResponse prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code api.GetDeviceActivationResponse}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:api.GetDeviceActivationResponse)
      io.chirpstack.api.GetDeviceActivationResponseOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.chirpstack.api.DeviceProto.internal_static_api_GetDeviceActivationResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.chirpstack.api.DeviceProto.internal_static_api_GetDeviceActivationResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.chirpstack.api.GetDeviceActivationResponse.class, io.chirpstack.api.GetDeviceActivationResponse.Builder.class);
    }

    // Construct using io.chirpstack.api.GetDeviceActivationResponse.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessage
              .alwaysUseFieldBuilders) {
        getDeviceActivationFieldBuilder();
        getJoinServerContextFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      deviceActivation_ = null;
      if (deviceActivationBuilder_ != null) {
        deviceActivationBuilder_.dispose();
        deviceActivationBuilder_ = null;
      }
      joinServerContext_ = null;
      if (joinServerContextBuilder_ != null) {
        joinServerContextBuilder_.dispose();
        joinServerContextBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.chirpstack.api.DeviceProto.internal_static_api_GetDeviceActivationResponse_descriptor;
    }

    @java.lang.Override
    public io.chirpstack.api.GetDeviceActivationResponse getDefaultInstanceForType() {
      return io.chirpstack.api.GetDeviceActivationResponse.getDefaultInstance();
    }

    @java.lang.Override
    public io.chirpstack.api.GetDeviceActivationResponse build() {
      io.chirpstack.api.GetDeviceActivationResponse result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.chirpstack.api.GetDeviceActivationResponse buildPartial() {
      io.chirpstack.api.GetDeviceActivationResponse result = new io.chirpstack.api.GetDeviceActivationResponse(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(io.chirpstack.api.GetDeviceActivationResponse result) {
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.deviceActivation_ = deviceActivationBuilder_ == null
            ? deviceActivation_
            : deviceActivationBuilder_.build();
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.joinServerContext_ = joinServerContextBuilder_ == null
            ? joinServerContext_
            : joinServerContextBuilder_.build();
        to_bitField0_ |= 0x00000002;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.chirpstack.api.GetDeviceActivationResponse) {
        return mergeFrom((io.chirpstack.api.GetDeviceActivationResponse)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.chirpstack.api.GetDeviceActivationResponse other) {
      if (other == io.chirpstack.api.GetDeviceActivationResponse.getDefaultInstance()) return this;
      if (other.hasDeviceActivation()) {
        mergeDeviceActivation(other.getDeviceActivation());
      }
      if (other.hasJoinServerContext()) {
        mergeJoinServerContext(other.getJoinServerContext());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getDeviceActivationFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              input.readMessage(
                  getJoinServerContextFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private io.chirpstack.api.DeviceActivation deviceActivation_;
    private com.google.protobuf.SingleFieldBuilder<
        io.chirpstack.api.DeviceActivation, io.chirpstack.api.DeviceActivation.Builder, io.chirpstack.api.DeviceActivationOrBuilder> deviceActivationBuilder_;
    /**
     * <pre>
     * Device activation object.
     * </pre>
     *
     * <code>.api.DeviceActivation device_activation = 1;</code>
     * @return Whether the deviceActivation field is set.
     */
    public boolean hasDeviceActivation() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Device activation object.
     * </pre>
     *
     * <code>.api.DeviceActivation device_activation = 1;</code>
     * @return The deviceActivation.
     */
    public io.chirpstack.api.DeviceActivation getDeviceActivation() {
      if (deviceActivationBuilder_ == null) {
        return deviceActivation_ == null ? io.chirpstack.api.DeviceActivation.getDefaultInstance() : deviceActivation_;
      } else {
        return deviceActivationBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Device activation object.
     * </pre>
     *
     * <code>.api.DeviceActivation device_activation = 1;</code>
     */
    public Builder setDeviceActivation(io.chirpstack.api.DeviceActivation value) {
      if (deviceActivationBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        deviceActivation_ = value;
      } else {
        deviceActivationBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Device activation object.
     * </pre>
     *
     * <code>.api.DeviceActivation device_activation = 1;</code>
     */
    public Builder setDeviceActivation(
        io.chirpstack.api.DeviceActivation.Builder builderForValue) {
      if (deviceActivationBuilder_ == null) {
        deviceActivation_ = builderForValue.build();
      } else {
        deviceActivationBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Device activation object.
     * </pre>
     *
     * <code>.api.DeviceActivation device_activation = 1;</code>
     */
    public Builder mergeDeviceActivation(io.chirpstack.api.DeviceActivation value) {
      if (deviceActivationBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0) &&
          deviceActivation_ != null &&
          deviceActivation_ != io.chirpstack.api.DeviceActivation.getDefaultInstance()) {
          getDeviceActivationBuilder().mergeFrom(value);
        } else {
          deviceActivation_ = value;
        }
      } else {
        deviceActivationBuilder_.mergeFrom(value);
      }
      if (deviceActivation_ != null) {
        bitField0_ |= 0x00000001;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * Device activation object.
     * </pre>
     *
     * <code>.api.DeviceActivation device_activation = 1;</code>
     */
    public Builder clearDeviceActivation() {
      bitField0_ = (bitField0_ & ~0x00000001);
      deviceActivation_ = null;
      if (deviceActivationBuilder_ != null) {
        deviceActivationBuilder_.dispose();
        deviceActivationBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Device activation object.
     * </pre>
     *
     * <code>.api.DeviceActivation device_activation = 1;</code>
     */
    public io.chirpstack.api.DeviceActivation.Builder getDeviceActivationBuilder() {
      bitField0_ |= 0x00000001;
      onChanged();
      return getDeviceActivationFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Device activation object.
     * </pre>
     *
     * <code>.api.DeviceActivation device_activation = 1;</code>
     */
    public io.chirpstack.api.DeviceActivationOrBuilder getDeviceActivationOrBuilder() {
      if (deviceActivationBuilder_ != null) {
        return deviceActivationBuilder_.getMessageOrBuilder();
      } else {
        return deviceActivation_ == null ?
            io.chirpstack.api.DeviceActivation.getDefaultInstance() : deviceActivation_;
      }
    }
    /**
     * <pre>
     * Device activation object.
     * </pre>
     *
     * <code>.api.DeviceActivation device_activation = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        io.chirpstack.api.DeviceActivation, io.chirpstack.api.DeviceActivation.Builder, io.chirpstack.api.DeviceActivationOrBuilder> 
        getDeviceActivationFieldBuilder() {
      if (deviceActivationBuilder_ == null) {
        deviceActivationBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            io.chirpstack.api.DeviceActivation, io.chirpstack.api.DeviceActivation.Builder, io.chirpstack.api.DeviceActivationOrBuilder>(
                getDeviceActivation(),
                getParentForChildren(),
                isClean());
        deviceActivation_ = null;
      }
      return deviceActivationBuilder_;
    }

    private io.chirpstack.api.JoinServerContext joinServerContext_;
    private com.google.protobuf.SingleFieldBuilder<
        io.chirpstack.api.JoinServerContext, io.chirpstack.api.JoinServerContext.Builder, io.chirpstack.api.JoinServerContextOrBuilder> joinServerContextBuilder_;
    /**
     * <pre>
     * Join-Server context.
     * A non-empty value indicatest that ChirpStack does not have access to
     * the AppSKey and that the encryption / decryption of the payloads is
     * the responsibility of the end-application.
     * </pre>
     *
     * <code>.common.JoinServerContext join_server_context = 2;</code>
     * @return Whether the joinServerContext field is set.
     */
    public boolean hasJoinServerContext() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Join-Server context.
     * A non-empty value indicatest that ChirpStack does not have access to
     * the AppSKey and that the encryption / decryption of the payloads is
     * the responsibility of the end-application.
     * </pre>
     *
     * <code>.common.JoinServerContext join_server_context = 2;</code>
     * @return The joinServerContext.
     */
    public io.chirpstack.api.JoinServerContext getJoinServerContext() {
      if (joinServerContextBuilder_ == null) {
        return joinServerContext_ == null ? io.chirpstack.api.JoinServerContext.getDefaultInstance() : joinServerContext_;
      } else {
        return joinServerContextBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Join-Server context.
     * A non-empty value indicatest that ChirpStack does not have access to
     * the AppSKey and that the encryption / decryption of the payloads is
     * the responsibility of the end-application.
     * </pre>
     *
     * <code>.common.JoinServerContext join_server_context = 2;</code>
     */
    public Builder setJoinServerContext(io.chirpstack.api.JoinServerContext value) {
      if (joinServerContextBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        joinServerContext_ = value;
      } else {
        joinServerContextBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Join-Server context.
     * A non-empty value indicatest that ChirpStack does not have access to
     * the AppSKey and that the encryption / decryption of the payloads is
     * the responsibility of the end-application.
     * </pre>
     *
     * <code>.common.JoinServerContext join_server_context = 2;</code>
     */
    public Builder setJoinServerContext(
        io.chirpstack.api.JoinServerContext.Builder builderForValue) {
      if (joinServerContextBuilder_ == null) {
        joinServerContext_ = builderForValue.build();
      } else {
        joinServerContextBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Join-Server context.
     * A non-empty value indicatest that ChirpStack does not have access to
     * the AppSKey and that the encryption / decryption of the payloads is
     * the responsibility of the end-application.
     * </pre>
     *
     * <code>.common.JoinServerContext join_server_context = 2;</code>
     */
    public Builder mergeJoinServerContext(io.chirpstack.api.JoinServerContext value) {
      if (joinServerContextBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0) &&
          joinServerContext_ != null &&
          joinServerContext_ != io.chirpstack.api.JoinServerContext.getDefaultInstance()) {
          getJoinServerContextBuilder().mergeFrom(value);
        } else {
          joinServerContext_ = value;
        }
      } else {
        joinServerContextBuilder_.mergeFrom(value);
      }
      if (joinServerContext_ != null) {
        bitField0_ |= 0x00000002;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * Join-Server context.
     * A non-empty value indicatest that ChirpStack does not have access to
     * the AppSKey and that the encryption / decryption of the payloads is
     * the responsibility of the end-application.
     * </pre>
     *
     * <code>.common.JoinServerContext join_server_context = 2;</code>
     */
    public Builder clearJoinServerContext() {
      bitField0_ = (bitField0_ & ~0x00000002);
      joinServerContext_ = null;
      if (joinServerContextBuilder_ != null) {
        joinServerContextBuilder_.dispose();
        joinServerContextBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Join-Server context.
     * A non-empty value indicatest that ChirpStack does not have access to
     * the AppSKey and that the encryption / decryption of the payloads is
     * the responsibility of the end-application.
     * </pre>
     *
     * <code>.common.JoinServerContext join_server_context = 2;</code>
     */
    public io.chirpstack.api.JoinServerContext.Builder getJoinServerContextBuilder() {
      bitField0_ |= 0x00000002;
      onChanged();
      return getJoinServerContextFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Join-Server context.
     * A non-empty value indicatest that ChirpStack does not have access to
     * the AppSKey and that the encryption / decryption of the payloads is
     * the responsibility of the end-application.
     * </pre>
     *
     * <code>.common.JoinServerContext join_server_context = 2;</code>
     */
    public io.chirpstack.api.JoinServerContextOrBuilder getJoinServerContextOrBuilder() {
      if (joinServerContextBuilder_ != null) {
        return joinServerContextBuilder_.getMessageOrBuilder();
      } else {
        return joinServerContext_ == null ?
            io.chirpstack.api.JoinServerContext.getDefaultInstance() : joinServerContext_;
      }
    }
    /**
     * <pre>
     * Join-Server context.
     * A non-empty value indicatest that ChirpStack does not have access to
     * the AppSKey and that the encryption / decryption of the payloads is
     * the responsibility of the end-application.
     * </pre>
     *
     * <code>.common.JoinServerContext join_server_context = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        io.chirpstack.api.JoinServerContext, io.chirpstack.api.JoinServerContext.Builder, io.chirpstack.api.JoinServerContextOrBuilder> 
        getJoinServerContextFieldBuilder() {
      if (joinServerContextBuilder_ == null) {
        joinServerContextBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            io.chirpstack.api.JoinServerContext, io.chirpstack.api.JoinServerContext.Builder, io.chirpstack.api.JoinServerContextOrBuilder>(
                getJoinServerContext(),
                getParentForChildren(),
                isClean());
        joinServerContext_ = null;
      }
      return joinServerContextBuilder_;
    }

    // @@protoc_insertion_point(builder_scope:api.GetDeviceActivationResponse)
  }

  // @@protoc_insertion_point(class_scope:api.GetDeviceActivationResponse)
  private static final io.chirpstack.api.GetDeviceActivationResponse DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.chirpstack.api.GetDeviceActivationResponse();
  }

  public static io.chirpstack.api.GetDeviceActivationResponse getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<GetDeviceActivationResponse>
      PARSER = new com.google.protobuf.AbstractParser<GetDeviceActivationResponse>() {
    @java.lang.Override
    public GetDeviceActivationResponse parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<GetDeviceActivationResponse> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<GetDeviceActivationResponse> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.chirpstack.api.GetDeviceActivationResponse getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

